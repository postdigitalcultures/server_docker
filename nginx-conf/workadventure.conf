server {
    listen 80;
    server_name workadventure.postdigitalcultures.org *.workadventure.postdigitalcultures.org;

    if ($scheme = http) {
        return 301 https://$server_name$request_uri;
    }

    location / {
        proxy_pass http://docker_reverse-proxy_1:6180;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

server {
    listen 443 ssl;
    server_name workadventure.postdigitalcultures.org *.workadventure.postdigitalcultures.org;

    ssl_certificate /certs/certificates/postdigitalcultures.org.crt;
    ssl_certificate_key /certs/certificates/postdigitalcultures.org.key;

    #ssl_certificate         /etc/letsencrypt/live/postdigitalcultures.org-0001/fullchain.pem;
    #ssl_certificate_key     /etc/letsencrypt/live/postdigitalcultures.org-0001/privkey.pem;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://docker_reverse-proxy_1:6180;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Increase timeouts to handle longer WebRTC connections
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;
    send_timeout 3600s;

}

